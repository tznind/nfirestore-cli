
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.1.0.0
//      You can make changes to this file and they will not be overwritten when saving.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace nfirestore_cli {
    using Google.Cloud.Firestore;
    using Newtonsoft.Json;
    using nfirestore_cli.Tabs;
    using System;
    using System.Collections.Generic;
    using Terminal.Gui;
    
    
    public partial class TabsPane {
        
        public TabsPane() {
            InitializeComponent();

            this.tabView.TabClicked += TabView_TabClicked;
        }

        List<IFirestoreTab> openTabs = new ();

        private void TabView_TabClicked(object sender, TabMouseEventArgs e)
        {
            // Middle mouse click in tab
            if(e.MouseEvent.Flags == MouseFlags.Button2Clicked)
            {
                e.MouseEvent.Handled = CloseTab(e.Tab);
            }

            // TODO: work out the offset within the tab to support clicking the [X]
        }

        private bool CloseTab(Tab tab)
        {
            var found = openTabs.FirstOrDefault(kvp => kvp.Tab == tab);

            // if we can close it
            if (found != null)
            {
                openTabs.Remove(found);
                tabView.RemoveTab(tab);
                tabView.SetNeedsDisplay();
                return true;
            }

            return false;
        }

        internal void OpenDocument(DocumentSnapshot snap, bool newTab)
        {
            if(newTab)
            {
                var existing = openTabs.FirstOrDefault(kvp => kvp.Is(snap.Reference));

                // If document is already open in another tab
                if (existing != null)
                {
                    // switch to it
                    tabView.SelectedTab = existing.Tab;
                    return;
                }

                var dt = new DocumentTab(snap);
                openTabs.Add(dt);
                tabView.AddTab(dt.Tab, true);

            }
            else
            {
                DocumentTab.OpenDocumentIn(currentDocumentTextView, snap);
            }
        }

        internal void OpenCollection(CollectionReference cr, IEnumerable<DocumentReference> children)
        {
            var existing = openTabs.FirstOrDefault(kvp => kvp.Is(cr));

            // If collection is already open in another tab
            if (existing != null)
            {
                // switch to it
                tabView.SelectedTab = existing.Tab;
                return;
            }

            var ct = new CollectionTab(cr, children);
            openTabs.Add(ct);
            tabView.AddTab(ct.Tab, true);
        }
    }
}
